{"version":3,"sources":["constants.js","redux/actions.js","redux/actionTypes.js","components/GalleryPrefs/GalleryPrefs.js","components/Image/Image.js","components/BigImage/BigImage.js","components/Gallery/Gallery.js","components/Navigation/Navigation.js","components/LoadingIcon/LoadingIcon.js","modules/fetch.js","App.js","redux/reducers/galleryPrefs.js","redux/reducers/bigImage.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SECTIONS","hot","top","user","SORT_TYPES","viral","time","rising","WINDOWS","day","week","month","year","all","setPage","page","type","payload","showBigImage","bigImageOpen","setBigImageIndex","bigImageIndex","mapDispatchToProps","setSection","section","setSort","sortType","setWindow","window","setShowViral","showViral","connect","state","galleryPrefs","sort","data-testid","className","Array","fill","map","_","i","key","Object","values","s","onClick","setSectionAdjustingSort","id","name","onChange","e","target","value","checked","images","imageIndex","image","title","description","link","fileType","slice","activateBigImage","length","concat","div","initial","scale","opacity","animate","transition","delay","exit","src","alt","bigImageAnim","x","position","bigImage","score","ups","downs","useEffect","scroll","left","video","controls","variants","img","loading","allImages","useMemo","index","disabled","LoadingIcon","a","fetch","method","body","JSON","stringify","data","json","filter","setImages","props","useState","setLoading","fetchImagesFromImgur","then","catch","error","console","initialState","action","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e584e6a9.chunk.js","sourcesContent":["export const SECTIONS = {\n  hot: \"hot\",\n  top: \"top\",\n  user: \"user\",\n};\n\nexport const SORT_TYPES = {\n  viral: \"viral\",\n  top: \"top\",\n  time: \"time\",\n  rising: \"rising\", // \"rising\" option only applies if section is \"user\"\n};\n\n// window parameter only applies if section is \"top\"\nexport const WINDOWS = {\n  day: \"day\",\n  week: \"week\",\n  month: \"month\",\n  year: \"year\",\n  all: \"all\",\n};\n","import {\n  SET_IMAGES,\n  SET_PAGE,\n  SET_SECTION,\n  SET_SHOW_VIRAL,\n  SET_SORT_TYPE,\n  SET_WINDOW,\n  SHOW_BIG_IMAGE,\n  SET_BIG_IMAGE_INDEX,\n} from \"./actionTypes\";\n\nexport const setImages = (images) => ({\n  type: SET_IMAGES,\n  payload: images,\n});\n\nexport const setSection = (section) => ({\n  type: SET_SECTION,\n  payload: section,\n});\n\nexport const setSort = (sortType) => ({\n  type: SET_SORT_TYPE,\n  payload: sortType,\n});\n\nexport const setPage = (page) => ({\n  type: SET_PAGE,\n  payload: page,\n});\n\nexport const setWindow = (window) => ({\n  type: SET_WINDOW,\n  payload: window,\n});\n\nexport const setShowViral = (showViral) => ({\n  type: SET_SHOW_VIRAL,\n  payload: showViral,\n});\n\nexport const showBigImage = (bigImageOpen) => ({\n  type: SHOW_BIG_IMAGE,\n  payload: bigImageOpen,\n});\n\nexport const setBigImageIndex = (bigImageIndex) => ({\n  type: SET_BIG_IMAGE_INDEX,\n  payload: bigImageIndex,\n});\n","export const SET_IMAGES = \"SET_IMAGES\";\nexport const SET_SECTION = \"SET_SECTION\";\nexport const SET_SORT_TYPE = \"SET_SORT_TYPE\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const SET_WINDOW = \"SET_WINDOW\";\nexport const SET_SHOW_VIRAL = \"SET_SHOW_VIRAL\";\nexport const SHOW_BIG_IMAGE = \"SHOW_BIG_IMAGE\";\nexport const SET_BIG_IMAGE_INDEX = \"SET_BIG_IMAGE_INDEX\";\n","import React from \"react\";\nimport \"./GalleryPrefs.css\";\nimport { connect } from \"react-redux\";\nimport { SECTIONS, SORT_TYPES, WINDOWS } from \"../../constants\";\nimport {\n  setSection,\n  setSort,\n  setWindow,\n  setPage,\n  setShowViral,\n} from \"../../redux/actions\";\n\nfunction GalleryPrefs({\n  page,\n  section,\n  sort,\n  showViral,\n  setSection,\n  setSort,\n  setWindow,\n  setPage,\n  setShowViral,\n}) {\n  function setSectionAdjustingSort(section, sort) {\n    // only user section is allowed for \"rising\" sort. default is \"viral\".\n    if (section !== SECTIONS.user && sort === SORT_TYPES.rising) {\n      setSort(SORT_TYPES.viral);\n    }\n\n    // only \"top\" section is allowed for \"window\" param.\n    if (section !== SECTIONS.top) {\n      setWindow(null);\n    }\n\n    // restart page number on each section change\n    setPage(0);\n\n    setSection(section);\n  }\n\n  return (\n    <section data-testid=\"main-section\" className=\"gallery-prefs\">\n      <div className=\"gallery-pref-page-display\">\n        {/* Display the number of pages as dots */}\n        <p>{`page ${page + 1}`}</p>\n        {Array(page + 1)\n          .fill()\n          .map((_, i) => (\n            <div key={i} className=\"page-indicator\"></div>\n          ))}\n      </div>\n\n      <div className=\"gallery-pref-sections\">\n        {Object.values(SECTIONS).map((s, i) => (\n          <button\n            key={i}\n            onClick={() => setSectionAdjustingSort(s, sort)}\n            className={section === s ? \"active-section\" : null}\n          >\n            {s}\n          </button>\n        ))}\n        <div\n          id={\"selected-\" + section}\n          className=\"active-section-indicator\"\n        ></div>\n      </div>\n\n      <div className=\"gallery-pref-options\">\n        <label>\n          <span className=\"select-name\">sort:</span>\n          <select\n            name=\"sort\"\n            id=\"sort-types\"\n            onChange={(e) => setSort(e.target.value)}\n          >\n            {Object.values(SORT_TYPES).map((sortType, i) => {\n              if (sortType === SORT_TYPES.rising && section !== SECTIONS.user) {\n                return null;\n              }\n\n              return (\n                <option key={i} value={sortType}>\n                  {sortType}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n\n        {section === SECTIONS.top && (\n          <label>\n            <span className=\"select-name\">window:</span>\n            <select\n              name=\"window\"\n              id=\"windows\"\n              onChange={(e) => setWindow(e.target.value)}\n            >\n              {Object.values(WINDOWS).map((window, i) => (\n                <option key={i} value={window}>\n                  {window}\n                </option>\n              ))}\n            </select>\n          </label>\n        )}\n\n        <label>\n          <input\n            id=\"viral-switch\"\n            name=\"viral\"\n            type=\"checkbox\"\n            checked={showViral}\n            onChange={() => setShowViral(!showViral)}\n          />\n          <span className=\"checkbox-slider\"></span>\n          <span className=\"checkbox-name\">viral</span>\n        </label>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  page: state.galleryPrefs.page,\n  sort: state.galleryPrefs.sort,\n  section: state.galleryPrefs.section,\n  showViral: state.galleryPrefs.showViral,\n});\n\nconst mapDispatchToProps = {\n  setSection,\n  setSort,\n  setWindow,\n  setPage,\n  setShowViral,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GalleryPrefs);\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { showBigImage, setBigImageIndex } from \"../../redux/actions\";\nimport \"./Image.css\";\n\nfunction Image({ images, imageIndex, setBigImageIndex, showBigImage }) {\n  let image = images[imageIndex];\n  let { title, description } = image;\n  let link = image.images[0].link;\n  let fileType = link.slice(-3); // jpg, png, mp4\n\n  // cut the too long titles/descriptions to avoid ugly looking thumbnails\n  // full title/description will be available upon clicking the image anyway\n  title = title && title.length > 70 ? title.slice(0, 70).concat(\"...\") : title;\n  description =\n    description && description.length > 70\n      ? description.slice(0, 70).concat(\"...\")\n      : description;\n\n  function activateBigImage() {\n    setBigImageIndex(imageIndex);\n    showBigImage(true);\n  }\n\n  return (\n    <>\n      <article className=\"image-thumbnail\">\n        <motion.div\n          className=\"image-wrapper\"\n          initial={{ scale: 0.2, opacity: 0 }}\n          animate={{\n            scale: 1,\n            opacity: 1,\n\n            transition: { delay: imageIndex * 0.1 },\n          }}\n          exit={{ scale: 0.2, opacity: 0 }}\n        >\n          <p data-testid=\"image-description\">{description || title}</p>\n\n          {fileType === \"mp4\" ? (\n            <video src={link} onClick={activateBigImage} />\n          ) : (\n            <img src={link} alt={title} onClick={activateBigImage} />\n          )}\n        </motion.div>\n      </article>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ images: state.galleryPrefs.images });\nconst mapDispatchToProps = { showBigImage, setBigImageIndex };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Image);\n","import React, { useEffect } from \"react\";\nimport \"./BigImage.css\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { showBigImage } from \"../../redux/actions\";\n\nconst bigImageAnim = {\n  initial: {\n    x: 300,\n    position: \"absolute\",\n    opacity: 0,\n  },\n  animate: {\n    x: 0,\n    position: \"static\",\n    opacity: 1,\n  },\n  exit: {\n    x: -300,\n    position: \"absolute\",\n    opacity: 0,\n  },\n};\n\nfunction BigImage({ images, bigImageIndex, showBigImage }) {\n  let image = images[bigImageIndex];\n  let { title, description, score, ups, downs } = image;\n  let link = image.images[0].link;\n  let fileType = link.slice(-3); // jpg, png, mpg;\n\n  useEffect(() => {\n    window.scroll({\n      top: 0,\n      left: 0,\n    });\n  }, []);\n\n  return (\n    <div className=\"big-image\">\n      <button onClick={() => showBigImage(false)}>{\"back to gallery\"}</button>\n      <div className=\"big-image-wrapper\">\n        {fileType === \"mp4\" ? (\n          <AnimatePresence>\n            <motion.video\n              controls\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              variants={bigImageAnim}\n              src={link}\n            />\n          </AnimatePresence>\n        ) : (\n          <AnimatePresence>\n            <motion.img\n              key={link}\n              src={link}\n              alt={title}\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              variants={bigImageAnim}\n            />\n          </AnimatePresence>\n        )}\n      </div>\n      <ul>\n        {title && (\n          <li>\n            Title: <span>{title}</span>\n          </li>\n        )}\n        {description && (\n          <li>\n            Description:\n            <span>{description}</span>\n          </li>\n        )}\n        <li>\n          Upvotes: <span>{ups}</span>\n        </li>\n        <li>\n          Downvotes: <span>{downs}</span>\n        </li>\n        <li>\n          Score: <span>{score}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  images: state.galleryPrefs.images,\n  bigImageIndex: state.bigImage.bigImageIndex,\n});\nconst mapDispatchToProps = { showBigImage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BigImage);\n","import React, { useMemo } from \"react\";\nimport \"./Gallery.css\";\nimport Image from \"../Image/Image\";\nimport BigImage from \"../BigImage/BigImage\";\nimport { connect } from \"react-redux\";\nimport { showBigImage, setBigImageIndex } from \"../../redux/actions\";\n\nfunction Gallery({ images, bigImageOpen, bigImageIndex, loading }) {\n  const allImages = useMemo(() => {\n    return images && images.map((_, i) => <Image key={i} imageIndex={i} />);\n  }, [images]);\n\n  return (\n    <section\n      data-testid=\"main-section\"\n      className={loading ? \"gallery gallery-loading\" : \"gallery\"}\n    >\n      {bigImageOpen && bigImageIndex !== null ? (\n        <BigImage index={bigImageIndex} />\n      ) : (\n        <>{allImages}</>\n      )}\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { images } = state.galleryPrefs;\n  const { bigImageOpen, bigImageIndex } = state.bigImage;\n\n  return { images, bigImageOpen, bigImageIndex };\n};\n\nconst mapDispatchToProps = { showBigImage, setBigImageIndex };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);\n","import React from \"react\";\nimport \"./Navigation.css\";\nimport { connect } from \"react-redux\";\nimport { setPage, setBigImageIndex } from \"../../redux/actions\";\n\nfunction Navigation({\n  images,\n  page,\n  bigImageOpen,\n  bigImageIndex,\n  setPage,\n  setBigImageIndex,\n}) {\n  return (\n    <nav className=\"navigation\">\n      <button\n        id=\"nav-back-button\"\n        data-testid=\"nav-back-button\"\n        onClick={() => {\n          if (bigImageOpen) setBigImageIndex(bigImageIndex - 1);\n          else setPage(page - 1);\n        }}\n        disabled={bigImageOpen ? bigImageIndex === 0 : page === 0}\n      />\n      <button\n        id=\"nav-next-button\"\n        data-testid=\"nav-next-button\"\n        onClick={() => {\n          if (bigImageOpen && bigImageIndex < images.length - 1) {\n            setBigImageIndex(bigImageIndex + 1);\n          } else if (bigImageOpen) {\n            setPage(page + 1);\n            setBigImageIndex(0);\n          } else {\n            setPage(page + 1);\n          }\n        }}\n      />\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  images: state.galleryPrefs.images,\n  page: state.galleryPrefs.page,\n  bigImageOpen: state.bigImage.bigImageOpen,\n  bigImageIndex: state.bigImage.bigImageIndex,\n});\nconst mapDispatchToProps = { setPage, setBigImageIndex };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React from \"react\";\nimport \"./LoadingIcon.css\";\n\nfunction LoadingIcon() {\n  // https://loading.io/css/\n  return (\n    <article className=\"loading-icon\">\n      <div className=\"lds-bg\"></div>\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </article>\n  );\n}\n\nexport default LoadingIcon;\n","export async function fetchImagesFromImgur({\n  section,\n  sort,\n  window,\n  page,\n  showViral,\n}) {\n  let data = await fetch(\"/api/get-images-from-imgur\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      section,\n      showViral,\n      sort,\n      window,\n      page,\n    }),\n  });\n\n  let images = await data.json();\n\n  // img.link is often CORS disabled, thus filter images for img.images.link\n  // return only single images, not collections, just for the sake of simplicity\n  return images.filter((img) => img.images && img.images.length === 1);\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport GalleryPrefs from \"./components/GalleryPrefs/GalleryPrefs\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport LoadingIcon from \"./components/LoadingIcon/LoadingIcon\";\nimport { connect } from \"react-redux\";\nimport { setImages } from \"./redux/actions\";\nimport { fetchImagesFromImgur } from \"./modules/fetch\";\n\nfunction App(props) {\n  const { section, sort, page, window, showViral, bigImageOpen } = props;\n  const { setImages } = props;\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!section) return;\n    setLoading(true);\n\n    fetchImagesFromImgur({ section, sort, window, page, showViral })\n      .then((images) => {\n        setLoading(false);\n        setImages(images);\n      })\n      .catch(\n        (error) => {\n          setLoading(false);\n          console.error(\"Image retrieval failed!\", error);\n        } // TODO\n      );\n  }, [section, sort, window, page, showViral, setImages]);\n\n  return (\n    <main className=\"app\">\n      {!bigImageOpen && <GalleryPrefs />}\n      {loading && <LoadingIcon />}\n      <Gallery loading={loading} />\n      <Navigation />\n    </main>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { section, sort, page, window, showViral } = state.galleryPrefs;\n  const { bigImageOpen } = state.bigImage;\n  return { section, sort, page, window, showViral, bigImageOpen };\n};\nconst mapDispatchToProps = { setImages };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SECTIONS, SORT_TYPES } from \"../../constants\";\nimport {\n  SET_IMAGES,\n  SET_SECTION,\n  SET_SORT_TYPE,\n  SET_PAGE,\n  SET_WINDOW,\n  SET_SHOW_VIRAL,\n} from \"../actionTypes\";\n\nconst initialState = {\n  images: [],\n  section: SECTIONS.hot,\n  sort: SORT_TYPES.viral,\n  page: 0,\n  window: null,\n  showViral: true,\n};\n\nconst galleryPrefs = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_IMAGES: {\n      return { ...state, images: payload };\n    }\n    case SET_SECTION:\n      return { ...state, section: payload };\n    case SET_SORT_TYPE:\n      return { ...state, sort: payload };\n    case SET_PAGE:\n      return { ...state, page: payload };\n    case SET_WINDOW:\n      return { ...state, window: payload };\n    case SET_SHOW_VIRAL:\n      return { ...state, showViral: payload };\n    default:\n      return state;\n  }\n};\n\nexport default galleryPrefs;\n","import { SHOW_BIG_IMAGE, SET_BIG_IMAGE_INDEX } from \"../actionTypes\";\n\nconst initialState = {\n  bigImageOpen: false,\n  bigImageIndex: null,\n};\n\nconst bigImage = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SHOW_BIG_IMAGE: {\n      return { ...state, bigImageOpen: payload };\n    }\n    case SET_BIG_IMAGE_INDEX:\n      return { ...state, bigImageIndex: payload };\n    default:\n      return state;\n  }\n};\n\nexport default bigImage;\n","import { combineReducers } from \"redux\";\nimport galleryPrefs from \"./galleryPrefs\";\nimport bigImage from \"./bigImage\";\n\nexport default combineReducers({ bigImage, galleryPrefs });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}